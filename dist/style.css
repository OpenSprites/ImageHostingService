/* normalize.css v3.0.3 | MIT License | github.com/necolas/normalize.css */
html{font-family:sans-serif;-ms-text-size-adjust:100%;-webkit-text-size-adjust:100%}body{margin:0}article,aside,details,figcaption,figure,footer,header,hgroup,main,menu,nav,section,summary{display:block}audio,canvas,progress,video{display:inline-block;vertical-align:baseline}audio:not([controls]){display:none;height:0}[hidden],template{display:none}a{background-color:transparent;}a:active,a:hover{outline:0}abbr[title]{border-bottom:1px dotted}b,strong{font-weight:bold}dfn{font-style:italic}h1{font-size:2em;margin:.67em 0}mark{background:#ff0;color:#000}small{font-size:80%}sub,sup{font-size:75%;line-height:0;position:relative;vertical-align:baseline}sup{top:-.5em}sub{bottom:-.25em}img{border:0}svg:not(:root){overflow:hidden}figure{margin:1em 40px}hr{box-sizing:content-box;height:0}pre{overflow:auto}code,kbd,pre,samp{font-family:monospace,monospace;font-size:1em}button,input,optgroup,select,textarea{color:inherit;font:inherit;margin:0}button{overflow:visible}button,select{text-transform:none}button,html input[type="button"],input[type="reset"],input[type="submit"]{-webkit-appearance:button;cursor:pointer}button[disabled],html input[disabled]{cursor:default}button::-moz-focus-inner,input::-moz-focus-inner{border:0;padding:0}input{line-height:normal}input[type="checkbox"],input[type="radio"]{box-sizing:border-box;padding:0}input[type="number"]::-webkit-inner-spin-button,input[type="number"]::-webkit-outer-spin-button{height:auto}input[type="search"]{-webkit-appearance:textfield;box-sizing:content-box}input[type="search"]::-webkit-search-cancel-button,input[type="search"]::-webkit-search-decoration{-webkit-appearance:none}fieldset{border:1px solid #c0c0c0;margin:0 2px;padding:.35em .625em .75em}legend{border:0;padding:0}textarea{overflow:auto}optgroup{font-weight:bold}table{border-collapse:collapse;border-spacing:0}td,th{padding:0}body{line-height:1.7;color:#333;background-color:#c8dddb;font-family:'Fira Sans',sans-serif}main a{color:#659593;border-bottom:1px solid #659593;text-decoration:none;transition:border-bottom-color 100ms;}main a:hover{color:#3d5958;border-bottom-color:#3d5958}nav{background-color:#659593;box-shadow:0 2px 5px 0 rgba(0,0,0,0.16),0 2px 10px 0 rgba(0,0,0,0.12);height:72px;margin-bottom:72px;user-select:none;}nav a{height:64px;padding:4px 24px;line-height:64px;text-align:center;display:inline-block;color:#fff;text-decoration:none;transition:background-color 100ms;}nav a:hover,nav a.active{background-color:rgba(0,0,0,0.05)}nav .opensprites{background:url("https://opensprites.org/assets/images/os-logotype.svg");background-repeat:no-repeat;background-position:center;background-size:144px;min-width:108px;position:absolute;left:50%;margin-left:-78px}nav .upload{float:right;margin-right:20px}#upload-form #upload-file{width:.1px;height:.1px;opacity:0;overflow:hidden;position:absolute;z-index:-1}#upload-form #upload-file + label{font-size:1.25em;display:inline-block;margin:auto;text-align:center;padding:8px 16px;border-radius:6px;color:#659593;transition:box-shadow 200ms;cursor:pointer;background-color:#fff;position:absolute;left:50%;transform:translate(-50%);}#upload-form #upload-file + label:hover{box-shadow:0 2px 5px 0 rgba(0,0,0,0.16),0 2px 10px 0 rgba(0,0,0,0.12)}/*# sourceMappingURL=style.css.map */
/*# sourceMappingURL=data:application/json;base64, */
